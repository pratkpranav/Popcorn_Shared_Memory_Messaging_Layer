Messaging Layer without Using Interrupts:

About: This messaging layer doesnot uses interrupts for working but instead uses first 4 bits two store integer and hence uses it to transfer messages between the VMs. You could see the output for the message being transferred from arm to x86 and x86 to arm aftr running it on dmesg. Currently it doesnot calls the upper popcorn layer to handle the messages because demo messages aren't regiateered but could do so uncommenting pcn_kmsg_process.  

final_arm.c :- This file has the messaging layer code to be installed in ARM VM. The code doesn't uses interrupts. 
final_x86.c :- This file has the messaging layer code to be installed in x86 VM. The code doesn't uses interrupts.

Usage :-

1. Start the ivshmem server on host first with commands(even before starting the VMs): ivshmem-server -F -v
2. After starting the server on host, Then start both the VMs with these command added to the initial command: -device ivshmem-doorbell,chardev=ivshmem -chardev socket,path=/tmp/ivshmem_socket,id=ivshmem (Do not leave space after or before equalto sign)
3. Now, go to the msg_layer folder on the VMs.
4. Add the files final_arm.c final_x86.c to ARM X86 VMs respectively.
5. Now, change the socket.c to final_arm.c and final_x86.c in Makefile.
run make
6. insmod msg_Socket.ko

(could tweak parameters here) 
INFO: 
NUM_MSG: number of demo message you want to send. 
NUMBER_OF_HANDLES: number of handles(maximum number of messages to be sent at a time).

Problem: Nothing ;)
